name: Build & Upload to Conda

on:
  workflow_dispatch:      # manual trigger

jobs:
  conda_deployment:
    name: Conda deployment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Conda environment creation and activation
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: 3.12
          auto-activate-base: true
          channels: mmariotti,anaconda,bioconda,biobuilds
          show-channel-urls: true
      
      - name: Extract version from _version.py
        id: ver
        run: |
          VERSION=$(python - <<'PY'
          import re, io
          src = io.open("src/selenoprofiles4/_version.py","r",encoding="utf-8").read()
          m = re.search(r'__version__\s*=\s*["\']([^"\']+)["\']', src)
          assert m, "No __version__ found"
          print(m.group(1))
          PY
          )
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          echo "Resolved version: $VERSION"

      - name: Install conda-build
        shell: bash -el {0}
        run: |
          conda install -y conda-build anaconda-client

      - name: Inject version into meta.yaml
        run: |
          VERSION=${{ steps.ver.outputs.version }}
          echo "Injecting version $VERSION into meta.yaml"
          sed -i "s/environ.get(\"PKG_VERSION\")/\"$VERSION\"/" meta.yaml

      - name: Build and upload the conda packages
        uses: uibcdf/action-build-and-upload-conda-packages@v1.4.0
        env:
          PKG_VERSION: ${{ steps.ver.outputs.version }} 
        with:
          python-version: 3.12
          meta_yaml_dir: . # Replace with the path to your meta.yaml directory
          user: maxtico # Replace with your Anaconda username (or an Anaconda organization username)
          token: ${{ secrets.ANACONDA_TOKEN }} # Replace with the name of your Anaconda Token secret